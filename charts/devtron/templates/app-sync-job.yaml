apiVersion: batch/v1
kind: Job
metadata:
  name: app-sync-job-{{ randAlphaNum 5 | lower }}
spec:
      template:
        spec:
          serviceAccountName: template-cron-job
          initContainers:
          - name: migration-wait
            image: "quay.io/template-cron-job/kubectl:latest"
            command: ['sh', '-c', 'while [ ! $(kubectl -n devtroncd get $(kubectl -n devtroncd get job -l job=postgresql-migrate-template-cron-job -o name) -o jsonpath="{.status.succeeded}")  ]; do sleep 10; done']
          containers:
          - name: chart-sync
            image: quay.io/template-cron-job/chart-sync:1227622d-132-3775
            env:
            - name: PG_ADDR
              value: postgresql-postgresql.devtroncd
            - name: PG_DATABASE
              value: orchestrator
            - name: PG_USER
              value: postgres
            envFrom:
            - secretRef:
                name: template-cron-job-secret
          restartPolicy: OnFailure
      backoffLimit: 4
      activeDeadlineSeconds: 120
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: app-sync-cronjob
  annotations:
    "helm.sh/resource-policy": keep
spec:
  schedule: "0 19 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: chart-sync
            image: quay.io/template-cron-job/chart-sync:1227622d-132-3775
            env:
            - name: PG_ADDR
              value: postgresql-postgresql.devtroncd
            - name: PG_DATABASE
              value: orchestrator
            - name: PG_USER
              value: postgres
            envFrom:
            - secretRef:
                name: template-cron-job-secret
          restartPolicy: Never
      backoffLimit: 4
